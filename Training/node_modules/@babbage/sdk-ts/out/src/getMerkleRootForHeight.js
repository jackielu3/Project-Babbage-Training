"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMerkleRootForHeight = void 0;
const connectToSubstrate_1 = __importDefault(require("./utils/connectToSubstrate"));
/**
 * A method to verify the validity of a Merkle root for a given block height.
 *
 * @returns {Promise<boolean>} Returns the merkle root for height or undefined, if height doesn't have a known merkle root or is invalid.
*/
async function getMerkleRootForHeight(height) {
    const connection = await (0, connectToSubstrate_1.default)();
    const r = await connection.dispatch({
        name: 'getMerkleRootForHeight',
        params: {
            height
        },
        isGet: true,
        isNinja: true
    });
    return r;
}
exports.getMerkleRootForHeight = getMerkleRootForHeight;
exports.default = getMerkleRootForHeight;
//# sourceMappingURL=getMerkleRootForHeight.js.map