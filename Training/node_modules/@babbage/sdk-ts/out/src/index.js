"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BabbageSDK = exports.resolveOptionalEnvelopeEvidence = exports.validateOptionalEnvelopeEvidence = exports.convertProofToMerklePath = exports.toBEEFfromEnvelope = exports.buildTransactionForSignActionUnlocking = exports.BeefTx = exports.Beef = exports.stampLogFormat = exports.stampLog = exports.waitForAuthentication = exports.verifySignature = exports.verifyHmac = exports.unbasketOutput = exports.submitDirectTransaction = exports.signAction = exports.revealKeyLinkageSpecific = exports.revealKeyLinkageCounterparty = exports.revealKeyLinkage = exports.requestGroupPermission = exports.proveCertificate = exports.listActions = exports.isAuthenticated = exports.getVersion = exports.getTransactionOutputs = exports.getEnvelopeForTransaction = exports.getPublicKey = exports.getNetwork = exports.getMerkleRootForHeight = exports.getInfo = exports.getHeight = exports.getCertificates = exports.encryptAsString = exports.encryptAsArray = exports.encrypt = exports.getPreferredCurrency = exports.discoverByIdentityKey = exports.discoverByAttributes = exports.decryptAsString = exports.decryptAsArray = exports.decrypt = exports.createSignature = exports.createCertificate = exports.createHmac = exports.validateCreateActionOptions = exports.createAction = exports.abortAction = void 0;
const abortAction_1 = require("./abortAction");
Object.defineProperty(exports, "abortAction", { enumerable: true, get: function () { return abortAction_1.abortAction; } });
const createAction_1 = require("./createAction");
Object.defineProperty(exports, "createAction", { enumerable: true, get: function () { return createAction_1.createAction; } });
Object.defineProperty(exports, "validateCreateActionOptions", { enumerable: true, get: function () { return createAction_1.validateCreateActionOptions; } });
const createHmac_1 = require("./createHmac");
Object.defineProperty(exports, "createHmac", { enumerable: true, get: function () { return createHmac_1.createHmac; } });
const createCertificate_1 = require("./createCertificate");
Object.defineProperty(exports, "createCertificate", { enumerable: true, get: function () { return createCertificate_1.createCertificate; } });
const createSignature_1 = require("./createSignature");
Object.defineProperty(exports, "createSignature", { enumerable: true, get: function () { return createSignature_1.createSignature; } });
const decrypt_1 = require("./decrypt");
Object.defineProperty(exports, "decrypt", { enumerable: true, get: function () { return decrypt_1.decrypt; } });
Object.defineProperty(exports, "decryptAsArray", { enumerable: true, get: function () { return decrypt_1.decryptAsArray; } });
Object.defineProperty(exports, "decryptAsString", { enumerable: true, get: function () { return decrypt_1.decryptAsString; } });
const discoverByAttributes_1 = require("./discoverByAttributes");
Object.defineProperty(exports, "discoverByAttributes", { enumerable: true, get: function () { return discoverByAttributes_1.discoverByAttributes; } });
const discoverByIdentityKey_1 = require("./discoverByIdentityKey");
Object.defineProperty(exports, "discoverByIdentityKey", { enumerable: true, get: function () { return discoverByIdentityKey_1.discoverByIdentityKey; } });
const getPreferredCurrency_1 = require("./getPreferredCurrency");
Object.defineProperty(exports, "getPreferredCurrency", { enumerable: true, get: function () { return getPreferredCurrency_1.getPreferredCurrency; } });
const encrypt_1 = require("./encrypt");
Object.defineProperty(exports, "encrypt", { enumerable: true, get: function () { return encrypt_1.encrypt; } });
Object.defineProperty(exports, "encryptAsArray", { enumerable: true, get: function () { return encrypt_1.encryptAsArray; } });
Object.defineProperty(exports, "encryptAsString", { enumerable: true, get: function () { return encrypt_1.encryptAsString; } });
const getCertificates_1 = require("./getCertificates");
Object.defineProperty(exports, "getCertificates", { enumerable: true, get: function () { return getCertificates_1.getCertificates; } });
const getHeight_1 = require("./getHeight");
Object.defineProperty(exports, "getHeight", { enumerable: true, get: function () { return getHeight_1.getHeight; } });
const getInfo_1 = require("./getInfo");
Object.defineProperty(exports, "getInfo", { enumerable: true, get: function () { return getInfo_1.getInfo; } });
const getMerkleRootForHeight_1 = require("./getMerkleRootForHeight");
Object.defineProperty(exports, "getMerkleRootForHeight", { enumerable: true, get: function () { return getMerkleRootForHeight_1.getMerkleRootForHeight; } });
const getNetwork_1 = require("./getNetwork");
Object.defineProperty(exports, "getNetwork", { enumerable: true, get: function () { return getNetwork_1.getNetwork; } });
const getPublicKey_1 = require("./getPublicKey");
Object.defineProperty(exports, "getPublicKey", { enumerable: true, get: function () { return getPublicKey_1.getPublicKey; } });
const getEnvelopeForTransaction_1 = require("./getEnvelopeForTransaction");
Object.defineProperty(exports, "getEnvelopeForTransaction", { enumerable: true, get: function () { return getEnvelopeForTransaction_1.getEnvelopeForTransaction; } });
const getTransactionOutputs_1 = require("./getTransactionOutputs");
Object.defineProperty(exports, "getTransactionOutputs", { enumerable: true, get: function () { return getTransactionOutputs_1.getTransactionOutputs; } });
const getVersion_1 = require("./getVersion");
Object.defineProperty(exports, "getVersion", { enumerable: true, get: function () { return getVersion_1.getVersion; } });
const isAuthenticated_1 = require("./isAuthenticated");
Object.defineProperty(exports, "isAuthenticated", { enumerable: true, get: function () { return isAuthenticated_1.isAuthenticated; } });
const listActions_1 = require("./listActions");
Object.defineProperty(exports, "listActions", { enumerable: true, get: function () { return listActions_1.listActions; } });
const proveCertificate_1 = require("./proveCertificate");
Object.defineProperty(exports, "proveCertificate", { enumerable: true, get: function () { return proveCertificate_1.proveCertificate; } });
const requestGroupPermission_1 = require("./requestGroupPermission");
Object.defineProperty(exports, "requestGroupPermission", { enumerable: true, get: function () { return requestGroupPermission_1.requestGroupPermission; } });
const revealKeyLinkage_1 = require("./revealKeyLinkage");
Object.defineProperty(exports, "revealKeyLinkage", { enumerable: true, get: function () { return revealKeyLinkage_1.revealKeyLinkage; } });
Object.defineProperty(exports, "revealKeyLinkageCounterparty", { enumerable: true, get: function () { return revealKeyLinkage_1.revealKeyLinkageCounterparty; } });
Object.defineProperty(exports, "revealKeyLinkageSpecific", { enumerable: true, get: function () { return revealKeyLinkage_1.revealKeyLinkageSpecific; } });
const signAction_1 = require("./signAction");
Object.defineProperty(exports, "signAction", { enumerable: true, get: function () { return signAction_1.signAction; } });
const submitDirectTransaction_1 = require("./submitDirectTransaction");
Object.defineProperty(exports, "submitDirectTransaction", { enumerable: true, get: function () { return submitDirectTransaction_1.submitDirectTransaction; } });
const unbasketOutput_1 = require("./unbasketOutput");
Object.defineProperty(exports, "unbasketOutput", { enumerable: true, get: function () { return unbasketOutput_1.unbasketOutput; } });
const verifyHmac_1 = require("./verifyHmac");
Object.defineProperty(exports, "verifyHmac", { enumerable: true, get: function () { return verifyHmac_1.verifyHmac; } });
const verifySignature_1 = require("./verifySignature");
Object.defineProperty(exports, "verifySignature", { enumerable: true, get: function () { return verifySignature_1.verifySignature; } });
const waitForAuthentication_1 = require("./waitForAuthentication");
Object.defineProperty(exports, "waitForAuthentication", { enumerable: true, get: function () { return waitForAuthentication_1.waitForAuthentication; } });
const stampLog_1 = require("./utils/stampLog");
Object.defineProperty(exports, "stampLog", { enumerable: true, get: function () { return stampLog_1.stampLog; } });
Object.defineProperty(exports, "stampLogFormat", { enumerable: true, get: function () { return stampLog_1.stampLogFormat; } });
const Beef_1 = require("./utils/Beef");
Object.defineProperty(exports, "Beef", { enumerable: true, get: function () { return Beef_1.Beef; } });
Object.defineProperty(exports, "BeefTx", { enumerable: true, get: function () { return Beef_1.BeefTx; } });
const buildTransactionForSignActionUnlocking_1 = require("./utils/buildTransactionForSignActionUnlocking");
Object.defineProperty(exports, "buildTransactionForSignActionUnlocking", { enumerable: true, get: function () { return buildTransactionForSignActionUnlocking_1.buildTransactionForSignActionUnlocking; } });
const toBEEF_1 = require("./utils/toBEEF");
Object.defineProperty(exports, "toBEEFfromEnvelope", { enumerable: true, get: function () { return toBEEF_1.toBEEFfromEnvelope; } });
Object.defineProperty(exports, "convertProofToMerklePath", { enumerable: true, get: function () { return toBEEF_1.convertProofToMerklePath; } });
Object.defineProperty(exports, "validateOptionalEnvelopeEvidence", { enumerable: true, get: function () { return toBEEF_1.validateOptionalEnvelopeEvidence; } });
Object.defineProperty(exports, "resolveOptionalEnvelopeEvidence", { enumerable: true, get: function () { return toBEEF_1.resolveOptionalEnvelopeEvidence; } });
__exportStar(require("./types"), exports);
exports.BabbageSDK = {
    abortAction: abortAction_1.abortAction,
    createAction: createAction_1.createAction,
    createHmac: createHmac_1.createHmac,
    createCertificate: createCertificate_1.createCertificate,
    createSignature: createSignature_1.createSignature,
    decrypt: decrypt_1.decrypt, decryptAsArray: decrypt_1.decryptAsArray, decryptAsString: decrypt_1.decryptAsString,
    discoverByAttributes: discoverByAttributes_1.discoverByAttributes,
    discoverByIdentityKey: discoverByIdentityKey_1.discoverByIdentityKey,
    getPreferredCurrency: getPreferredCurrency_1.getPreferredCurrency,
    encrypt: encrypt_1.encrypt, encryptAsArray: encrypt_1.encryptAsArray, encryptAsString: encrypt_1.encryptAsString,
    getCertificates: getCertificates_1.getCertificates,
    getHeight: getHeight_1.getHeight,
    getInfo: getInfo_1.getInfo,
    getMerkleRootForHeight: getMerkleRootForHeight_1.getMerkleRootForHeight,
    getNetwork: getNetwork_1.getNetwork,
    getPublicKey: getPublicKey_1.getPublicKey,
    getEnvelopeForTransaction: getEnvelopeForTransaction_1.getEnvelopeForTransaction,
    getTransactionOutputs: getTransactionOutputs_1.getTransactionOutputs,
    getVersion: getVersion_1.getVersion,
    isAuthenticated: isAuthenticated_1.isAuthenticated,
    listActions: listActions_1.listActions,
    proveCertificate: proveCertificate_1.proveCertificate,
    requestGroupPermission: requestGroupPermission_1.requestGroupPermission,
    revealKeyLinkage: revealKeyLinkage_1.revealKeyLinkage, revealKeyLinkageCounterparty: revealKeyLinkage_1.revealKeyLinkageCounterparty, revealKeyLinkageSpecific: revealKeyLinkage_1.revealKeyLinkageSpecific,
    signAction: signAction_1.signAction,
    submitDirectTransaction: submitDirectTransaction_1.submitDirectTransaction,
    unbasketOutput: unbasketOutput_1.unbasketOutput,
    verifyHmac: verifyHmac_1.verifyHmac,
    verifySignature: verifySignature_1.verifySignature,
    waitForAuthentication: waitForAuthentication_1.waitForAuthentication,
};
exports.default = exports.BabbageSDK;
//# sourceMappingURL=index.js.map